{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app.js","../../app/app.js","../../app/states.js","../../app/common/Test2Controller.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","node_modules/browserify/node_modules/process/browser.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","process","global","_interopRequire","obj","__esModule","ng","window","angular","controllers","services","directives","configFunction","constants","statesFunction","appName","app","name","constant","config","run","$log","CONSTANTS","console","debug","text","this","self","Buffer","arguments","./angularcontrollers","./angulardirectives","./angularservices","./config","./constants","./states","_process","buffer",2,"Test1Controller","Test2Controller","moduleName","controllerModules","controller","./common/Test1Controller","./common/Test2Controller",3,"register","simpleDirective","complexDirective","directiveModules","directive","./common/ComplexDirective","./common/SimpleDirective","./utils",4,"HelloWorldService","servicesModule","service","./common/HelloWorldService",5,"_createClass","defineProperties","target","props","key","prop","configurable","value","writable","Object","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","ComplexDirective","$q","$interval","replace","restrict","templateUrl","$inject","link","scope","elem","css","compile","tElement",6,"property1","property2","greeting",7,"SimpleDirective",8,"dummyProperty","helloWorldProperty","helloWorldFunction",9,10,"$logProvider","log","debugEnabled",11,"isDummy",12,"$stateProvider","$urlRouterProvider","otherwise","state","url",13,"_applyConstructor","args","create","result","apply","registerFn","constructorFn","_normalizeConstructor","originalCompileFn","_cloneFunction","_override","bind","factoryArray","_createFactoryArray","input","constructor","Array","injected","slice","push","_len","_key","original","object","methodName","callback",14,"subject","encoding","type","byteLength","isArray","data","kMaxLength","RangeError","toString","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","poolSize","parent","rootParent","SlowBuffer","buf","hexWrite","string","offset","Number","remaining","strLen","parsed","parseInt","substr","isNaN","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","start","end","base64","fromByteArray","utf8Slice","res","tmp","Math","min","decodeUtf8Char","String","fromCharCode","asciiSlice","ret","binarySlice","hexSlice","len","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","INVALID_BASE64_RE","trim","units","Infinity","codePoint","leadSurrogate","charCodeAt","byteArray","c","hi","lo","toByteArray","src","dst","decodeURIComponent","err","INSPECT_MAX_BYTES","ArrayBuffer","arr","foo","subarray","b","compare","x","y","isEncoding","toLowerCase","concat","list","totalLength","undefined","pos","item","copy","loweredCase","equals","inspect","match","join","indexOf","val","byteOffset","arrayIndexOf","foundIndex","get","set","v","writeUInt8","isFinite","swap","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target_start","fill","toArrayBuffer","BP","toLocaleString","base64-js","is-array",15,"lookup","decode","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","base64js",16,"isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","rt","abs","LN2",17,18,"drainQueue","draining","currentQueue","queue","noop","nextTick","fun","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar ng = _interopRequire((typeof window !== \"undefined\" ? window.angular : typeof global !== \"undefined\" ? global.angular : null));\n\nvar controllers = _interopRequire(require(\"./angularcontrollers\"));\n\nvar services = _interopRequire(require(\"./angularservices\"));\n\nvar directives = _interopRequire(require(\"./angulardirectives\"));\n\nvar configFunction = _interopRequire(require(\"./config\"));\n\nvar constants = _interopRequire(require(\"./constants\"));\n\nvar statesFunction = _interopRequire(require(\"./states\"));\n\nvar appName = \"Test1App\";\nvar app = ng.module(appName, [\"ngRoute\", \"ui.router\", services.name, controllers.name, directives.name]);\n\napp.constant(\"CONSTANTS\", constants);\n\napp.config(configFunction);\napp.config(statesFunction);\n\n/*@ngInject*/\napp.run([\"$log\", \"CONSTANTS\", function ($log, CONSTANTS) {\n    // Add code that needs a run block to execute here.\n    console.debug(\"Run block executed\");\n    $log.debug(\"$log output\");\n    $log.debug(CONSTANTS.text);\n}]);\n\nmodule.exports = app;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\app.js\",\"/app\")\n\n},{\"./angularcontrollers\":2,\"./angulardirectives\":3,\"./angularservices\":4,\"./config\":10,\"./constants\":11,\"./states\":12,\"_process\":18,\"buffer\":14}],2:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar ng = _interopRequire((typeof window !== \"undefined\" ? window.angular : typeof global !== \"undefined\" ? global.angular : null));\n\nvar Test1Controller = _interopRequire(require(\"./common/Test1Controller\"));\n\nvar Test2Controller = _interopRequire(require(\"./common/Test2Controller\"));\n\nvar moduleName = \"Test1App.controllers\";\nvar controllerModules = ng.module(moduleName, []).controller(\"Test1Controller\", Test1Controller).controller(\"Test2Controller\", Test2Controller);\n\nmodule.exports = controllerModules;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\angularcontrollers.js\",\"/app\")\n\n},{\"./common/Test1Controller\":8,\"./common/Test2Controller\":9,\"_process\":18,\"buffer\":14}],3:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar ng = _interopRequire((typeof window !== \"undefined\" ? window.angular : typeof global !== \"undefined\" ? global.angular : null));\n\nvar register = _interopRequire(require(\"./utils\"));\n\nvar simpleDirective = _interopRequire(require(\"./common/SimpleDirective\"));\n\nvar complexDirective = _interopRequire(require(\"./common/ComplexDirective\"));\n\nvar moduleName = \"Test1App.directives\";\nvar directiveModules = ng.module(moduleName, []);\nregister(moduleName).directive(\"simpleDirective\", simpleDirective);\nregister(moduleName).directive(\"complexDirective\", complexDirective);\n\nmodule.exports = directiveModules;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\angulardirectives.js\",\"/app\")\n\n},{\"./common/ComplexDirective\":5,\"./common/SimpleDirective\":7,\"./utils\":13,\"_process\":18,\"buffer\":14}],4:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar ng = _interopRequire((typeof window !== \"undefined\" ? window.angular : typeof global !== \"undefined\" ? global.angular : null));\n\nvar HelloWorldService = _interopRequire(require(\"./common/HelloWorldService\"));\n\nvar moduleName = \"Test1App.services\";\nvar servicesModule = ng.module(moduleName, [\"ngResource\"]).service(\"HelloWorldService\", HelloWorldService);\n\nmodule.exports = servicesModule;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\angularservices.js\",\"/app\")\n\n},{\"./common/HelloWorldService\":6,\"_process\":18,\"buffer\":14}],5:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar ComplexDirective = (function () {\n    /*@ngInject*/\n\n    function ComplexDirective($q, $interval) {\n        _classCallCheck(this, ComplexDirective);\n\n        this.$q = $q;\n        this.$interval = $interval;\n\n        this.replace = true;\n        this.restrict = \"AE\"; //Properties of DDO have to be attached to the instance through this reference\n        this.templateUrl = \"app/common/ComplexView.html\";\n    }\r\n    ComplexDirective.$inject = [\"$q\", \"$interval\"];\n\n    _createClass(ComplexDirective, {\n        link: {\n            value: function link(scope, elem, attrs, ngModelController) {\n                elem.css(\"color\", \"green\");\n                elem.css(\"border\", \"2px solid red\");\n            }\n        },\n        compile: {\n            value: function compile(tElement) {\n                tElement.css(\"background-color\", \"yellow\");\n            }\n        }\n    });\n\n    return ComplexDirective;\n})();\n\nmodule.exports = ComplexDirective;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\common\\\\ComplexDirective.js\",\"/app\\\\common\")\n\n},{\"_process\":18,\"buffer\":14}],6:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar HelloWorldService = (function () {\n    function HelloWorldService() {\n        _classCallCheck(this, HelloWorldService);\n\n        this.property1 = \"Hello world from ES6 service\";\n        this.property2 = 100;\n    }\n\n    _createClass(HelloWorldService, {\n        greeting: {\n            value: function greeting() {\n                return this.property1;\n            }\n        }\n    });\n\n    return HelloWorldService;\n})();\n\nmodule.exports = HelloWorldService;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\common\\\\HelloWorldService.js\",\"/app\\\\common\")\n\n},{\"_process\":18,\"buffer\":14}],7:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar SimpleDirective =\n/*@ngInject*/\n[\"$q\", \"$interval\", function SimpleDirective($q, $interval) {\n    _classCallCheck(this, SimpleDirective);\n\n    this.$q = $q;\n    this.$interval = $interval;\n\n    this.restrict = \"AE\"; //Properties of DDO have to be attached to the instance through this reference\n    this.templateUrl = \"app/common/SimpleView.html\";\n    this.scope = {};\n}];\n\nmodule.exports = SimpleDirective;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\common\\\\SimpleDirective.js\",\"/app\\\\common\")\n\n},{\"_process\":18,\"buffer\":14}],8:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar Test1Controller = (function () {\n    /*@ngInject*/\n\n    function Test1Controller(HelloWorldService) {\n        _classCallCheck(this, Test1Controller);\n\n        this.dummyProperty = \"Hello from controller via ES6 !\";\n        this.HelloWorldService = HelloWorldService;\n        this.helloWorldProperty = HelloWorldService.greeting();\n    }\r\n    Test1Controller.$inject = [\"HelloWorldService\"];\n\n    _createClass(Test1Controller, {\n        helloWorldFunction: {\n            value: function helloWorldFunction() {\n                return this.HelloWorldService.greeting();\n            }\n        }\n    });\n\n    return Test1Controller;\n})();\n\nmodule.exports = Test1Controller;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\common\\\\Test1Controller.js\",\"/app\\\\common\")\n\n},{\"_process\":18,\"buffer\":14}],9:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar Test2Controller = function Test2Controller() {\n    _classCallCheck(this, Test2Controller);\n\n    this.dummyProperty = \"Hello from controller 2 via ES6 !\";\n};\n\nmodule.exports = Test2Controller;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\common\\\\Test2Controller.js\",\"/app\\\\common\")\n\n},{\"_process\":18,\"buffer\":14}],10:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\"; // Required for now otherwise the /*ngInject*/ move to the wrong place in compiled functions as browserify aoto placesd üse strict\"in functions (ES6 requirement)\n\n/*@ngInject*/\nvar configFunction = function ($logProvider) {\n    console.log(\"Config executed\");\n    $logProvider.debugEnabled(true); // Turns global logging with $log.debug on\n};\r\nconfigFunction.$inject = [\"$logProvider\"];\n\nmodule.exports = configFunction;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\config.js\",\"/app\")\n\n},{\"_process\":18,\"buffer\":14}],11:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar constants = {\n    isDummy: true,\n    text: \"Some random property text\"\n};\n\nmodule.exports = constants;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\constants.js\",\"/app\")\n\n},{\"_process\":18,\"buffer\":14}],12:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\"; // Required for now otherwise the /*ngInject*/ move to the wrong place in compiled functions as browserify aoto placesd üse strict\"in functions (ES6 requirement)\n\n/*@ngInject*/\nvar statesFunction = function ($stateProvider, $urlRouterProvider) {\n    console.log(\"states executing\");\n    // For any unmatched url, redirect to /state1\n    $urlRouterProvider.otherwise(\"/state1\");\n\n    // Now set up the states\n    $stateProvider.state(\"state1\", {\n        url: \"/state1\",\n        templateUrl: \"partials/state1.html\"\n    }).state(\"state1.list\", {\n        url: \"/list\",\n        templateUrl: \"partials/state1.list.html\" }).state(\"state2\", {\n        url: \"/state2\",\n        templateUrl: \"partials/state2.html\"\n    });\n};\r\nstatesFunction.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n\nmodule.exports = statesFunction;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\states.js\",\"/app\")\n\n},{\"_process\":18,\"buffer\":14}],13:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\"use strict\";\n\nvar _applyConstructor = function (Constructor, args) { var instance = Object.create(Constructor.prototype); var result = Constructor.apply(instance, args); return result != null && (typeof result == \"object\" || typeof result == \"function\") ? result : instance; };\n\n/**\n * From http://www.michaelbromley.co.uk/blog/350/exploring-es6-classes-in-angularjs-1-x?utm_content=buffer184f8&utm_medium=social&utm_source=plus.google.com&utm_campaign=buffer\n * Modified directive so that tmeplateUrl will work (_createFactoryArray), see https://github.com/michaelbromley/angular-es6/issues/1\n * Removed everything except directive\n */\nvar registerFn = function register(appName) {\n\n    var app = angular.module(appName);\n\n    return {\n        directive: directive };\n\n    function directive(name, constructorFn) {\n\n        constructorFn = _normalizeConstructor(constructorFn);\n\n        if (!constructorFn.prototype.compile) {\n            // create an empty compile function if none was defined.\n            constructorFn.prototype.compile = function () {};\n        }\n\n        var originalCompileFn = _cloneFunction(constructorFn.prototype.compile);\n\n        // Decorate the compile method to automatically return the link method (if it exists)\n        // and bind it to the context of the constructor (so `this` works correctly).\n        // This gets around the problem of a non-lexical \"this\" which occurs when the directive class itself\n        // returns `this.link` from within the compile function.\n        _override(constructorFn.prototype, \"compile\", function () {\n            return function () {\n                originalCompileFn.apply(this, arguments);\n\n                if (constructorFn.prototype.link) {\n                    return constructorFn.prototype.link.bind(this);\n                }\n            };\n        });\n\n        var factoryArray = _createFactoryArray(constructorFn);\n\n        app.directive(name, factoryArray);\n        return this;\n    }\n\n    /**\n     * If the constructorFn is an array of type ['dep1', 'dep2', ..., constructor() {}]\n     * we need to pull out the array of dependencies and add it as an $inject property of the\n     * actual constructor function.\n     * @param input\n     * @returns {*}\n     * @private\n     */\n    function _normalizeConstructor(input) {\n        var constructorFn;\n\n        if (input.constructor === Array) {\n            //\n            var injected = input.slice(0, input.length - 1);\n            constructorFn = input[input.length - 1];\n            constructorFn.$inject = injected;\n        } else {\n            constructorFn = input;\n        }\n\n        return constructorFn;\n    }\n\n    /**\n     * Convert a constructor function into a factory function which returns a new instance of that\n     * constructor, with the correct dependencies automatically injected as arguments.\n     *\n     * In order to inject the dependencies, they must be attached to the constructor function with the\n     * `$inject` property annotation.\n     *\n     * @param constructorFn\n     * @returns {Array.<T>}\n     * @private\n     */\n    function _createFactoryArray(constructorFn) {\n        // get the array of dependencies that are needed by this component (as contained in the `$inject` array)\n        var args = constructorFn.$inject || [];\n        var factoryArray = args.slice(); // create a copy of the array\n\n        // This was changed to work correctly with directives (templateUrl)\n        factoryArray.push(function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            var directive = _applyConstructor(constructorFn, args);\n            directive.link = directive.link;\n            directive.compile = directive.compile;\n            return directive;\n        });\n\n        return factoryArray;\n    }\n\n    /**\n     * Clone a function\n     * @param original\n     * @returns {Function}\n     */\n    function _cloneFunction(original) {\n        return function () {\n            return original.apply(this, arguments);\n        };\n    }\n\n    /**\n     * Override an object's method with a new one specified by `callback`.\n     * @param object\n     * @param methodName\n     * @param callback\n     */\n    function _override(object, methodName, callback) {\n        object[methodName] = callback(object[methodName]);\n    }\n};\n\nmodule.exports = registerFn;\n\r\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app\\\\utils.js\",\"/app\")\n\n},{\"_process\":18,\"buffer\":14}],14:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding) {\n  var self = this\n  if (!(self instanceof Buffer)) return new Buffer(subject, encoding)\n\n  var type = typeof subject\n  var length\n\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) {\n    // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data)) subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' +\n      kMaxLength.toString(16) + ' bytes')\n  }\n\n  if (length < 0) length = 0\n  else length >>>= 0 // coerce to uint32\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    self = Buffer._augment(new Uint8Array(length)) // eslint-disable-line consistent-this\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++) {\n        self[i] = subject.readUInt8(i)\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        self[i] = ((subject[i] % 256) + 256) % 256\n      }\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize) self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function byteLength (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function toString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, target_start, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - target_start < end - start) {\n    end = target.length - target_start + start\n  }\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\\\\index.js\",\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\")\n\n},{\"_process\":18,\"base64-js\":15,\"buffer\":14,\"ieee754\":16,\"is-array\":17}],15:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\\\\node_modules\\\\base64-js\\\\lib\\\\b64.js\",\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\\\\node_modules\\\\base64-js\\\\lib\")\n\n},{\"_process\":18,\"buffer\":14}],16:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nexports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\\\\node_modules\\\\ieee754\\\\index.js\",\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\\\\node_modules\\\\ieee754\")\n\n},{\"_process\":18,\"buffer\":14}],17:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\\\\node_modules\\\\is-array\\\\index.js\",\"/node_modules\\\\browserify\\\\node_modules\\\\buffer\\\\node_modules\\\\is-array\")\n\n},{\"_process\":18,\"buffer\":14}],18:[function(require,module,exports){\n(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules\\\\browserify\\\\node_modules\\\\process\\\\browser.js\",\"/node_modules\\\\browserify\\\\node_modules\\\\process\")\n\n},{\"_process\":18,\"buffer\":14}]},{},[1])\n//# sourceMappingURL=data:application/json;base64,\n","\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar ng = _interopRequire(require(\"angular\"));\n\nvar controllers = _interopRequire(require(\"./angularcontrollers\"));\n\nvar services = _interopRequire(require(\"./angularservices\"));\n\nvar directives = _interopRequire(require(\"./angulardirectives\"));\n\nvar configFunction = _interopRequire(require(\"./config\"));\n\nvar constants = _interopRequire(require(\"./constants\"));\n\nvar statesFunction = _interopRequire(require(\"./states\"));\n\nvar appName = \"Test1App\";\nvar app = ng.module(appName, [\"ngRoute\", \"ui.router\", services.name, controllers.name, directives.name]);\n\napp.constant(\"CONSTANTS\", constants);\n\napp.config(configFunction);\napp.config(statesFunction);\n\n/*@ngInject*/\napp.run(function ($log, CONSTANTS) {\n    // Add code that needs a run block to execute here.\n    console.debug(\"Run block executed\");\n    $log.debug(\"$log output\");\n    $log.debug(CONSTANTS.text);\n});\n\nmodule.exports = app;\n","\"use strict\"; // Required for now otherwise the /*ngInject*/ move to the wrong place in compiled functions as browserify aoto placesd üse strict\"in functions (ES6 requirement)\n\n/*@ngInject*/\nvar statesFunction = function ($stateProvider, $urlRouterProvider) {\n    console.log(\"states executing\");\n    // For any unmatched url, redirect to /state1\n    $urlRouterProvider.otherwise(\"/state1\");\n\n    // Now set up the states\n    $stateProvider.state(\"state1\", {\n        url: \"/state1\",\n        templateUrl: \"partials/state1.html\"\n    }).state(\"state1.list\", {\n        url: \"/list\",\n        templateUrl: \"partials/state1.list.html\" }).state(\"state2\", {\n        url: \"/state2\",\n        templateUrl: \"partials/state2.html\"\n    });\n};\n\nmodule.exports = statesFunction;\n","\"use strict\";\n\nvar _applyConstructor = function (Constructor, args) { var instance = Object.create(Constructor.prototype); var result = Constructor.apply(instance, args); return result != null && (typeof result == \"object\" || typeof result == \"function\") ? result : instance; };\n\n/**\n * From http://www.michaelbromley.co.uk/blog/350/exploring-es6-classes-in-angularjs-1-x?utm_content=buffer184f8&utm_medium=social&utm_source=plus.google.com&utm_campaign=buffer\n * Modified directive so that tmeplateUrl will work (_createFactoryArray), see https://github.com/michaelbromley/angular-es6/issues/1\n * Removed everything except directive\n */\nvar registerFn = function register(appName) {\n\n    var app = angular.module(appName);\n\n    return {\n        directive: directive };\n\n    function directive(name, constructorFn) {\n\n        constructorFn = _normalizeConstructor(constructorFn);\n\n        if (!constructorFn.prototype.compile) {\n            // create an empty compile function if none was defined.\n            constructorFn.prototype.compile = function () {};\n        }\n\n        var originalCompileFn = _cloneFunction(constructorFn.prototype.compile);\n\n        // Decorate the compile method to automatically return the link method (if it exists)\n        // and bind it to the context of the constructor (so `this` works correctly).\n        // This gets around the problem of a non-lexical \"this\" which occurs when the directive class itself\n        // returns `this.link` from within the compile function.\n        _override(constructorFn.prototype, \"compile\", function () {\n            return function () {\n                originalCompileFn.apply(this, arguments);\n\n                if (constructorFn.prototype.link) {\n                    return constructorFn.prototype.link.bind(this);\n                }\n            };\n        });\n\n        var factoryArray = _createFactoryArray(constructorFn);\n\n        app.directive(name, factoryArray);\n        return this;\n    }\n\n    /**\n     * If the constructorFn is an array of type ['dep1', 'dep2', ..., constructor() {}]\n     * we need to pull out the array of dependencies and add it as an $inject property of the\n     * actual constructor function.\n     * @param input\n     * @returns {*}\n     * @private\n     */\n    function _normalizeConstructor(input) {\n        var constructorFn;\n\n        if (input.constructor === Array) {\n            //\n            var injected = input.slice(0, input.length - 1);\n            constructorFn = input[input.length - 1];\n            constructorFn.$inject = injected;\n        } else {\n            constructorFn = input;\n        }\n\n        return constructorFn;\n    }\n\n    /**\n     * Convert a constructor function into a factory function which returns a new instance of that\n     * constructor, with the correct dependencies automatically injected as arguments.\n     *\n     * In order to inject the dependencies, they must be attached to the constructor function with the\n     * `$inject` property annotation.\n     *\n     * @param constructorFn\n     * @returns {Array.<T>}\n     * @private\n     */\n    function _createFactoryArray(constructorFn) {\n        // get the array of dependencies that are needed by this component (as contained in the `$inject` array)\n        var args = constructorFn.$inject || [];\n        var factoryArray = args.slice(); // create a copy of the array\n\n        // This was changed to work correctly with directives (templateUrl)\n        factoryArray.push(function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            var directive = _applyConstructor(constructorFn, args);\n            directive.link = directive.link;\n            directive.compile = directive.compile;\n            return directive;\n        });\n\n        return factoryArray;\n    }\n\n    /**\n     * Clone a function\n     * @param original\n     * @returns {Function}\n     */\n    function _cloneFunction(original) {\n        return function () {\n            return original.apply(this, arguments);\n        };\n    }\n\n    /**\n     * Override an object's method with a new one specified by `callback`.\n     * @param object\n     * @param methodName\n     * @param callback\n     */\n    function _override(object, methodName, callback) {\n        object[methodName] = callback(object[methodName]);\n    }\n};\n\nmodule.exports = registerFn;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding) {\n  var self = this\n  if (!(self instanceof Buffer)) return new Buffer(subject, encoding)\n\n  var type = typeof subject\n  var length\n\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) {\n    // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data)) subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' +\n      kMaxLength.toString(16) + ' bytes')\n  }\n\n  if (length < 0) length = 0\n  else length >>>= 0 // coerce to uint32\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    self = Buffer._augment(new Uint8Array(length)) // eslint-disable-line consistent-this\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++) {\n        self[i] = subject.readUInt8(i)\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        self[i] = ((subject[i] % 256) + 256) % 256\n      }\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize) self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function byteLength (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function toString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, target_start, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - target_start < end - start) {\n    end = target.length - target_start + start\n  }\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":"/source/"}